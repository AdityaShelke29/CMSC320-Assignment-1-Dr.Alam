Q1: Why might be consider using git?

Answer: One might consider using git for a variety of different reasons. 
First of all, git is the premier tool for tracking changes in codebases. Companies and 
individuals use git so that, if they need to, they can see what changes were done in 
the past in order to solve bugs or get insights for problems they are facing for the 
second time. Next, git is very useful for collaboration. It allows multiple individuals 
to work on the codebase at once while minimizing conflicts where more than one person 
have made conflicting changes to the same file. It provides, also, the ability to 
merge changes from multiple individuals. Finally, git allows people to branch off from 
the main codebase. This allows them to work on a new feature that may otherwise cause 
the main codebase to stop functioning correctly, while still letting the bug - free 
version of the codebase be the master branch.

Q2: What field could data science be applied to? Give and Example and how it might help

Answer: One field that data science can be applied to is economics and finance. 
Every day, billions of stock for hundreds of thousands of companies is traded on the 
global stock exchanges. There is a ton of data about buy orders, sell orders, and 
price limits for orders that is generated every day, as well as chronological data and 
historical data regarding when certain categories of companies are expected to do well 
and when they are expected to do worse. Data science can be applied to this situation 
in order to determine exactly and precisely when it is best to buy stocks for certain 
companies in order to maximize short term or long term profit. 


Q3: What is the difference between merging and rebasing?

Answer: Merging is essentially the process of combining two branches. When we merge a 
branch A into master, we are one by one merging each of the changes from branch A 
into master. Rebasing is a little different. We know that if we create a branch A from 
master, while we work on branch A, it is possible that master has had new commits. 
Essentially, rebasing allows us to incorporate those new commits that happened to master 
after we branched off into branch A. Essentially, this changes effectively when in the 
timeline branch A was branched off from master. 